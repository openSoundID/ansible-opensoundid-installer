#!/bin/bash

set -e

TMPDIR=$(mktemp -d);
ROOT_DIR={{ openSoundID_directory }}/
ANSIBLE_DIR={{ openSoundID_directory }}/ansible

RESULT_DIR={{ openSoundID_directory }}/results/$(date '+%Y-%m-%d-%H:%M:%S')
mkdir -p ${RESULT_DIR}

cd ${ROOT_DIR}

export JAVA_HOME=/usr/lib/jvm/java-11-openjdk
pushd  {{ openSoundID_directory }}/javasrc/Engine
mvn -DskipTests install
popd

cp {{ openSoundID_directory }}/javasrc/Engine/export/engine-1.0.0-SNAPSHOT.jar lib/

#create database
./bin/createDatabase.sh

#download metadata and make database file
pushd  ${ANSIBLE_DIR}/ansible-retrieve-metadata
ansible-playbook playbook-retrieve-metadata.yml -e root_dir=${ROOT_DIR}
popd

#populate database
./bin/populateDatabase.sh

#json metadata to database
${JAVA_HOME}/bin/java -classpath "lib/engine-1.0.0-SNAPSHOT.jar:properties"  org.opensoundid.xenocanto.XenoCantoRecord

#iInsert Noise records to database
${JAVA_HOME}/bin/java -classpath "lib/engine-1.0.0-SNAPSHOT.jar:properties"  org.opensoundid.noise.NoiseRecords

#make inventory File
${JAVA_HOME}/bin/java -classpath "lib/engine-1.0.0-SNAPSHOT.jar:properties"  org.opensoundid.ml.Inventory

#rm -f {{ openSoundID_directory }}/dataset/training/JSONDirectory/*.json
#rm -f {{ openSoundID_directory }}/dataset/training/FeaturesDirectory/*.arff
#rm -f {{ openSoundID_directory }}/dataset/training/WAVDirectory/*.wav
#rm -f {{ openSoundID_directory }}/dataset/test-xcalso/JSONDirectory/*.json
#rm -f {{ openSoundID_directory }}/dataset/test-xcalso/FeaturesDirectory/*.arff
#rm -f {{ openSoundID_directory }}/dataset/test-xcalso/WAVDirectory/*.wav

#download wave file and make dataset for training dataset
pushd  ${ANSIBLE_DIR}/ansible-make-datasets
ansible-playbook playbook-make-training-datasets.yml -e root_dir=${ROOT_DIR}
popd

#download wave file and make dataset file for test dataset
pushd  ${ANSIBLE_DIR}/ansible-make-datasets
ansible-playbook playbook-make-test-datasets.yml -e root_dir=${ROOT_DIR}
popd

cp {{ openSoundID_directory }}/properties/opensoundid.properties ${RESULT_DIR}
cp {{ openSoundID_directory }}/bin/audiotofeatures.py ${RESULT_DIR}


${JAVA_HOME}/bin/java -Xmx16g -classpath "lib/engine-1.0.0-SNAPSHOT.jar:properties" org.opensoundid.ml.Features

set +e
rm {{ openSoundID_directory }}/Signature-2.0/model/*.model
set -e
cp {{ openSoundID_directory }}/dataset/results/test-200.arff {{ openSoundID_directory }}/dataset/results/testalso-500.arff $TMPDIR
${JAVA_HOME}/bin/java -Xmx16g -classpath "lib/mtj.jar:lib/engine-1.0.0-SNAPSHOT.jar:properties" org.opensoundid.ml.Classification --arffTestDirectory=$TMPDIR
cp {{ openSoundID_directory }}/Signature-2.0/logs/SoundAnalyzer.log ${RESULT_DIR}
rm -rf $TMPDIR
