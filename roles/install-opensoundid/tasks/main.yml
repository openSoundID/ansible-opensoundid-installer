---

- name: Enable EPEL Repository on CentOS 8
  dnf:
    name: epel-release
    state: latest
  when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and
          (ansible_distribution_major_version == "8")

- name: Enable EPEL Repository on CentOS 7
  yum:
    name: epel-release
    state: latest
  when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and
          (ansible_distribution_major_version == "7")

- name: Enable the RPM Fusion Free repository on CentOS 8
  dnf:
    name: "https://download1.rpmfusion.org/free/el/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm"
    state: present
    disable_gpg_check: yes
  when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and
          (ansible_distribution_major_version == "8")

- name: Enable the RPM Fusion Free repository on CentOS 7
  yum:
    name: "https://download1.rpmfusion.org/el/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm"
    state: present
    disable_gpg_check: yes
  when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and
          (ansible_distribution_major_version == "7") 

- name: Install the latest version of unzip
  yum:
    name: unzip
    state: latest

- name: Install the latest version of tar
  yum:
    name: tar
    state: latest

- name: Install the latest version of java 11 openjdk
  yum:
    name: java-11-openjdk-devel
    state: latest

- name: Install the latest version of Maven
  yum:
    name: maven
    state: latest

- name: Install the latest version of ffmpeg
  dnf:
    name: ffmpeg
    state: latest
    enablerepo: powertools

- name: Install the latest version of sox
  yum:
    name: sox
    state: latest

- name: Install sox-plugins-freeworld
  yum:
    name: sox-plugins-freeworld
    state: latest
  when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and
          (ansible_distribution_major_version == "7") 
    
- name: Install the latest version of python3-pip
  yum:
    name: python3-pip
    state: latest

- name: Install essentia with pip 
  pip:
    name: essentia
    version: 2.1b6.dev234
    executable: pip-3

- name: Install xeno-canto with pip 
  pip:
    name: xeno-canto
    version: 2.0.1
    executable: pip-3

- name: Install scipy with pip 
  pip:
    name: scipy
    version: 1.5.4
    executable: pip-3

- name: Add the group opensoundid
  group:
    name: opensoundid
    state: present

- name: Add the user opensoundid
  user:
    name: opensoundid
    group: opensoundid
    comment: OpenSoundID
    shell: /bin/bash

- name: Add or modify soft and hard limit for the user opensoundid 
  pam_limits:
    domain: opensoundid
    limit_type: '-'
    limit_item: nofile
    value: 8192
    comment: unlimited nofile for user opensoundid

- name: check that results directory exists
  file:
    path: "{{ openSoundID_directory }}/results"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that bin directory exists
  file:
    path: "{{ openSoundID_directory }}/bin"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that database directory exists
  file:
    path: "{{ openSoundID_directory }}/database"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that inventory directory exists
  file:
    path: "{{ openSoundID_directory }}/inventory"
    state: directory
    owner: opensoundid
    group: opensoundid
  
- name: check that lib directory exists
  file:
    path: "{{ openSoundID_directory }}/lib"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that logs directory exists
  file:
    path: "{{ openSoundID_directory }}/logs"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that model directory exists
  file:
    path: "{{ openSoundID_directory }}/model"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that properties directory exists
  file:
    path: "{{ openSoundID_directory }}/properties"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that ansible directory exists
  file:
    path: "{{ openSoundID_directory }}/ansible"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that metadataRepository directory exists
  file:
    path: "{{ openSoundID_directory }}/metadataRepository"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that training Download directory exists
  file:
    path: "{{ openSoundID_directory }}/dataset/training/DownloadDirectory"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that training WAV  directory exists
  file:
    path: "{{ openSoundID_directory }}/dataset/training/WAVDirectory"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that training JSON  directory exists
  file:
    path: "{{ openSoundID_directory }}/dataset/training/JSONDirectory"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that training noises directory exists
  file:
    path: "{{ openSoundID_directory }}/dataset/training/noises"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that test-xcalso Download directory exists
  file:
    path: "{{ openSoundID_directory }}/dataset/test-xcalso/DownloadDirectory"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that test-xcalso WAV  directory exists
  file:
    path: "{{ openSoundID_directory }}/dataset/test-xcalso/WAVDirectory"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that test-xcalso JSON  directory exists
  file:
    path: "{{ openSoundID_directory }}/dataset/test-xcalso/JSONDirectory"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that soundAnalyzer recordDirectory  directory exists
  file:
    path: "{{ openSoundID_directory }}/soundAnalyzer/recordDirectory"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that noises directory exists
  file:
    path: "{{ openSoundID_directory }}/noises"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: check that results dataset directory exists
  file:
    path: "{{ openSoundID_directory }}/dataset/results"
    state: directory
    owner: opensoundid
    group: opensoundid

- name: Copy noise file
  copy:
    src: noises/noise.wav
    dest: "{{ openSoundID_directory }}/noises/noise.wav"
    owner: opensoundid
    group: opensoundid

- name: Copy populate_birds.sql
  copy:
    src: database/populate_birds.sql
    dest: "{{ openSoundID_directory }}/database/populate_birds.sql"
    owner: opensoundid
    group: opensoundid

- name: Copy create.sql
  copy:
    src: database/create.sql
    dest: "{{ openSoundID_directory }}/database/create.sql"
    owner: opensoundid
    group: opensoundid

- name: Copy update.sql
  copy:
    src: database/update.sql
    dest: "{{ openSoundID_directory }}/database/update.sql"
    owner: opensoundid
    group: opensoundid

- name: Copy H2 database jar
  copy:
    src: lib/h2-1.4.200.jar
    dest: "{{ openSoundID_directory }}/lib/h2-1.4.200.jar"
    owner: opensoundid
    group: opensoundid

- name: Copy mtj.jar
  copy:
    src: lib/mtj.jar
    dest: "{{ openSoundID_directory }}/lib/mtj.jar"
    owner: opensoundid
    group: opensoundid

- name: Template opensoudid properties files to properties
  template:
    src: opensoundid.properties.j2
    dest: "{{ openSoundID_directory }}/properties/opensoundid.properties"
    owner: opensoundid
    group: opensoundid

- name: Template log properties files to properties
  template:
    src: log4j2.properties.j2
    dest: "{{ openSoundID_directory }}/properties/log4j2.properties"
    owner: opensoundid
    group: opensoundid

- name: Template compute.sh files to bin
  template:
    src: compute.sh.j2
    dest: "{{ openSoundID_directory }}/bin/compute.sh"
    owner: opensoundid
    group: opensoundid
    mode: '0744'

- name: Template createDatabase.sh.j2 files to bin
  template:
    src: createDatabase.sh.j2
    dest: "{{ openSoundID_directory }}/bin/createDatabase.sh"
    owner: opensoundid
    group: opensoundid
    mode: '0744'

- name: Template populateDatabase.sh.j2 files to bin
  template:
    src: populateDatabase.sh.j2
    dest: "{{ openSoundID_directory }}/bin/populateDatabase.sh"
    owner: opensoundid
    group: opensoundid
    mode: '0744'

- name: Template updateDatabase.sh.j2 files to bin
  template:
    src: updateDatabase.sh.j2
    dest: "{{ openSoundID_directory }}/bin/updateDatabase.sh"
    owner: opensoundid
    group: opensoundid
    mode: '0744'

- name: Template analyze.sh.j2 files to bin
  template:
    src: analyze.sh.j2
    dest: "{{ openSoundID_directory }}/bin/analyze.sh"
    owner: opensoundid
    group: opensoundid
    mode: '0744'

- name: Git checkout ansible-retrieve-metadata repository
  git:
    repo: 'https://github.com/openSoundID/ansible-retrieve-metadata.git'
    dest: "{{ openSoundID_directory }}/ansible/ansible-retrieve-metadata"

- name: adjust right on directory
  file:
    path: "{{ openSoundID_directory }}/ansible/ansible-retrieve-metadata"
    state: directory
    recurse: true
    owner: opensoundid
    group: opensoundid

- name: Git checkout ansible-make-datasets repository
  git:
    repo: 'https://github.com/openSoundID/ansible-make-datasets.git'
    dest: "{{ openSoundID_directory }}/ansible/ansible-make-datasets"

- name: adjust right on directory
  file:
    path: "{{ openSoundID_directory }}/ansible/ansible-make-datasets"
    state: directory
    recurse: true
    owner: opensoundid
    group: opensoundid

- name: Git checkout engine repository
  git:
    repo: 'https://github.com/openSoundID/Engine.git'
    dest: "{{ openSoundID_directory }}/javasrc/Engine"

- name: adjust right on directory
  file:
    path: "{{ openSoundID_directory }}/javasrc"
    state: directory
    recurse: true
    owner: opensoundid
    group: opensoundid

- name: "Extract mitogen-0.2.9.tar.gz into {{ openSoundID_directory }}/ansible"
  unarchive:
    src: mitogen/mitogen-0.2.9.tar.gz
    dest: "{{ openSoundID_directory }}/ansible"
    owner: opensoundid
    group: opensoundid

- name: Template ansible.cfg files ansible-retrieve-metadata
  template:
    src: ansible.cfg.j2
    dest: "{{ openSoundID_directory }}/ansible/ansible-retrieve-metadata/ansible.cfg"
    owner: opensoundid
    group: opensoundid
    mode: '0744'

- name: Template ansible.cfg files ansible-make-datasets
  template:
    src: ansible.cfg.j2
    dest: "{{ openSoundID_directory }}/ansible/ansible-make-datasets/ansible.cfg"
    owner: opensoundid
    group: opensoundid
    mode: '0744'

- name: Create linux service for sound Analyzer
  template:
    src: soundAnalyzer.service.j2
    dest: "/etc/systemd/system/soundAnalyzer.service"
    owner: root
    group: root
    mode: '0644'

- name: Template soundAnalyzer.sh files to bin
  template:
    src: soundAnalyzer.sh.j2
    dest: "{{ openSoundID_directory }}/bin/soundAnalyzer.sh"
    owner: opensoundid
    group: opensoundid
    mode: '0744'

